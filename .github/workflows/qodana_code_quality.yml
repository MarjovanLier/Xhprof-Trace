name: Qodana
on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  qodana:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        id: checkout
        with:
          fetch-depth: 0

      - name: Setup PHP
        id: setup-php
        if: steps.checkout.outcome == 'success'
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: ast, mbstring, pdo, pdo_mysql, xml, zip
          coverage: xdebug

      - name: Cache Composer Dependencies
        id: composer-cache
        if: steps.setup-php.outcome == 'success'
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        id: composer-install
        if: steps.setup-php.outcome == 'success'
        run: composer install --prefer-dist --no-progress

      - name: "Qodana Scan"
        id: qodana
        if: steps.composer-cache.outcome == 'success'
        uses: JetBrains/qodana-action@v2023.3
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          pr-mode: false
          #args: --apply-fixes,--baseline,qodana.sarif.json
          args: --apply-fixes
          push-fixes: pull-request
          use-caches: true
          post-pr-comment: true
          upload-result: false
          github-token: ${{ github.token }}
